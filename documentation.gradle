
dependencies {
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.18.2'
}

openapi3 {
    servers = [
            {url = "http://localhost:8080"}
    ]
    title = 'CatchTable backend clone'
    description = '캐치테이블 백엔드 클론 코딩 API 명세서'
    version = '0.0.1'
    format = 'yaml'

    contact = {
        name = '임경익'
        email = 'lofri97@gmail.com'
    }

    outputFileNamePrefix = "openapi"
}



tasks.named('asciidoctor') {
    dependsOn test
    inputs.dir snippetsDir
}

def groupName = "redoc_documentation"

tasks.register('openapifix', Exec) {
    group groupName
    dependsOn('clean')
    dependsOn('openapi3')
    commandLine 'cmd', '/c', 'python3', './fix-openapi-yaml.py', 'build/api-spec/openapi.yaml'
    standardOutput = new ByteArrayOutputStream()

    doLast { // 작업 실행 블록의 시작
        def outputStream = new FileOutputStream('build/api-spec/openapi-fixed.yaml')
        outputStream.write(standardOutput.toString().getBytes())
        outputStream.close()

        def processResult = standardOutput.toString()
        if (processResult.contains('Traceback') || processResult.contains('Error')) {
            println "Openapi fix error"
        } else {
            println "Openapi fix completed"
        }
    }
}

tasks.register('generateRestDocRedocly', Exec) {
    group groupName
    dependsOn openapifix
    commandLine 'cmd', '/c', 'npx', '@redocly/cli', 'build-docs', './build/api-spec/openapi-fixed.yaml', '-o', 'src/main/resources/static/docs.html'
}

